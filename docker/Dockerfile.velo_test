# Velo Test - WhatsApp Bridge Dockerfile
# Based on the original whatsapp-bridge but for Velo Test specific deployment

FROM golang:1.21-alpine AS builder

# Install required packages
RUN apk add --no-cache git gcc musl-dev curl

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o whatsapp-bridge main.go

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates curl tzdata

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/whatsapp-bridge .

# Create necessary directories
RUN mkdir -p /app/store /app/logs && \
    chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Set environment variables
ENV SERVICE_NAME=velo-test-whatsapp-bridge
ENV PROJECT_NAME=Velo Test

# Run the application
CMD ["./whatsapp-bridge"]